/**
 * Est치s atrapado en una pesadilla en la que Freddy Krueger te persigue 游땴. El sue침o est치 representado por un laberinto de celdas, donde cada celda tiene un valor num칠rico que indica el nivel de peligro de esa parte del sue침o.

Debes encontrar el camino m치s seguro (es decir, el que tenga el menor valor total de peligro) desde la esquina superior izquierda hasta la esquina inferior derecha de la matriz.

En este desaf칤o, solo puedes moverte hacia la derecha o hacia abajo (no puedes retroceder ni moverte en diagonal) y debes calcular el nivel total de peligro del camino m치s seguro.

La pesadilla est치 representada por una matriz dream de tama침o n x m donde cada celda es un n칰mero positivo que representa el nivel de peligro de esa celda en el sue침o.

Y tienes que devolver el valor total de peligro del camino m치s seguro de la esquina superior izquierda (posici칩n [0][0]) a la esquina inferior derecha (posici칩n [n-1][m-1]).
 */

function findSafestPath(dream) {
    return 0

}

let row = dream.length
let col = dream[0].length

const dAuxiliar = Array.from({ length: row }, () => Array(col).fill(0))
dAuxiliar[0][0] = dream[0][0]

for (let j = 1; j < col; j++) {
    dAuxiliar[0][j] = dAuxiliar[0][j - 1] + dream[0][j]
}

for (let i = 1; i < row; i++) {
    dAuxiliar[i][0] = dAuxiliar[i - 1][0] + dream[i][0]
}

for (let i = 1; i < row; i++) {
    for (let j = 1; j < col; j++) {
        dAuxiliar[i][j] = dream[i][j] + Math.min(dAuxiliar[i - 1][j], dAuxiliar[i][j - 1])
    }
}

console.log(dAuxiliar[row - 1][col - 1])